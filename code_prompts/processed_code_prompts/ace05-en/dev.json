[
    {
        "instruction": "# This is an event extraction task where the goal is to extract structured events from the text. A structured event contains an event trigger word, an event type, the arguments participating in the event, and their roles in the event. For each different event type, please output the extracted information from the text into python-style dictionaries where the first key will be 'mention' with the value of the event trigger. Next, please output the arguments and their roles following the same format. The event type definitions and their argument roles are defined next.",
        "input": "# The following lines describe the task definition\n\n@dataclass\nclass Die(LifeEvent):\n    \"\"\"A 'Die' event is characterized by the end of life of a person or group of people. It can occur in various contexts such as warfare, accidents, or natural disasters. Triggers for this event include words like 'killed', 'died', 'slain', 'perished', and 'expired'.\"\"\"\n    mention: str # The text span that triggers the event.\n    person: List # The 'person' argument specifies an individual related to the death event, often someone who is mentioned in the context of the deceased. Examples include 'comrades', 'witnesses', or 'relatives'.\n    instrument: List # The 'instrument' argument in a 'Die' event captures the means by which the death was caused. This can be a weapon, vehicle, or other object. Examples include 'rifle', 'airplane', or 'virus'.\n    victim: List # In a 'Die' event, the 'victim' argument indicates the person or people who lost their lives. Examples include 'journalists', 'members', or 'comrades'.\n    place: List # In a 'Die' event, the 'place' argument indicates the geographical location of the death. It can be a precise location or a broader area. Examples are 'center', 'battlefield', or 'city'.\n    agent: List # The 'agent' argument specifies the entity responsible for causing the death. This can include individuals, groups, or organizations. Examples are 'coalition', 'forces', or 'attacker'.\n\n\n# This is the text to analyze\ntext = \"HAIFA, Israel, March 5 (AFP) - Fifteen people were killed and more than 30 wounded Wednesday as a suicide bomber blew himself up on a student bus in the northern town of Haifa, the first bombing in Israel in exactly two months.\"\n\n# The list called result should contain the instances for the following events according to the guidelines above:\nresult = \n",
        "output": "[Die(mention='killed', person=[], instrument=[], victim=['people'], place=['town'], agent=['bomber']), Die(mention='suicide', person=[], instrument=[], victim=['himself'], place=['town'], agent=['bomber'])]"
    },
    {
        "instruction": "# This is an event extraction task where the goal is to extract structured events from the text. A structured event contains an event trigger word, an event type, the arguments participating in the event, and their roles in the event. For each different event type, please output the extracted information from the text into python-style dictionaries where the first key will be 'mention' with the value of the event trigger. Next, please output the arguments and their roles following the same format. The event type definitions and their argument roles are defined next.",
        "input": "# The following lines describe the task definition\n\n@dataclass\nclass Injure(LifeEvent):\n    \"\"\"The 'Injure' event refers to any incident where one or more individuals suffer physical harm or damage. This can include wounds, bruises, or any other form of bodily injury.\"\"\"\n    mention: str # The text span that triggers the event.\n    instrument: List # The 'instrument' argument refers to the object or method used to inflict the injury. This can include weapons, tools, or any other means of causing harm.\n    victim: List # Edge cases for the victim argument include situations where the victim is not a human, such as animals, or where the victim is a collective group, like 'the crowd'.\n    place: List # Edge cases for the place argument include vague references like 'nearby' or 'in the vicinity', which may require additional context to be fully understood.\n    agent: List # The role of the agent is to identify who or what is responsible for the injury, which can be important for legal, medical, or investigative purposes.\n\n\n# This is the text to analyze\ntext = \"HAIFA, Israel, March 5 (AFP) - Fifteen people were killed and more than 30 wounded Wednesday as a suicide bomber blew himself up on a student bus in the northern town of Haifa, the first bombing in Israel in exactly two months.\"\n\n# The list called result should contain the instances for the following events according to the guidelines above:\nresult = \n",
        "output": "[Injure(mention='wounded', instrument=[], victim=['30'], place=['town'], agent=['bomber'])]"
    },
    {
        "instruction": "# This is an event extraction task where the goal is to extract structured events from the text. A structured event contains an event trigger word, an event type, the arguments participating in the event, and their roles in the event. For each different event type, please output the extracted information from the text into python-style dictionaries where the first key will be 'mention' with the value of the event trigger. Next, please output the arguments and their roles following the same format. The event type definitions and their argument roles are defined next.",
        "input": "# The following lines describe the task definition\n\n@dataclass\nclass Attack(ConflictEvent):\n    \"\"\"An 'Attack' event is defined as any act of aggression where an attacker aims to harm a target using various means such as weapons, physical force, or other methods. Example triggers include 'strike', 'bombard', 'invade', 'assault', and 'clash'.\"\"\"\n    mention: str # The text span that triggers the event.\n    instrument: List # In an 'Attack' event, the 'instrument' is the object or method used by the attacker to inflict harm. For instance, in 'The terrorists planted a bomb in the car', 'bomb' is the instrument.\n    target: List # The 'target' argument refers to the entity or entities that are the focus of the attack. This can include people, groups, or locations. For example, in the sentence 'The terrorists attacked the embassy', 'embassy' is the target.\n    victim: List # In an 'Attack' event, the 'victim' is the person or group that is harmed or affected by the attack. For instance, in 'The bomb blast injured several bystanders', 'several bystanders' are the victims.\n    place: List # The 'place' argument identifies the geographical location of the attack. This can be a specific site or a broader region. For example, 'The ambush took place in the forest' has 'forest' as the place.\n    agent: List # The 'agent' in an 'Attack' event is the entity responsible for the attack. This can include individuals, groups, or larger entities. For example, 'The assault was ordered by the gang leader' has 'gang leader' as the agent.\n    attacker: List # The 'attacker' argument refers to the individual or group that initiates the attack. For example, in 'The militants launched an assault on the village', 'militants' are the attackers.\n\n\n# This is the text to analyze\ntext = \"HAIFA, Israel, March 5 (AFP) - Fifteen people were killed and more than 30 wounded Wednesday as a suicide bomber blew himself up on a student bus in the northern town of Haifa, the first bombing in Israel in exactly two months.\"\n\n# The list called result should contain the instances for the following events according to the guidelines above:\nresult = \n",
        "output": "[Attack(mention='bombing', instrument=[], target=[], victim=[], place=['Israel'], agent=[], attacker=[]), Attack(mention='blew', instrument=[], target=[], victim=[], place=['town'], agent=[], attacker=['bomber'])]"
    },
    {
        "instruction": "# This is an event extraction task where the goal is to extract structured events from the text. A structured event contains an event trigger word, an event type, the arguments participating in the event, and their roles in the event. For each different event type, please output the extracted information from the text into python-style dictionaries where the first key will be 'mention' with the value of the event trigger. Next, please output the arguments and their roles following the same format. The event type definitions and their argument roles are defined next.",
        "input": "# The following lines describe the task definition\n\n@dataclass\nclass MergeOrg(BusinessEvent):\n    \"\"\"In a MergeOrg event, the focus is on the entities involved in the merger. These entities can be companies, departments, startups, or any other organizational units.\"\"\"\n    mention: str # The text span that triggers the event.\n    org: List # The 'Org' argument refers to the organizations involved in the merger. These can be companies, departments, startups, or any other organizational units that are combining to form a new entity.\n\n\n# This is the text to analyze\ntext = \"HAIFA, Israel, March 5 (AFP) - Fifteen people were killed and more than 30 wounded Wednesday as a suicide bomber blew himself up on a student bus in the northern town of Haifa, the first bombing in Israel in exactly two months.\"\n\n# The list called result should contain the instances for the following events according to the guidelines above:\nresult = \n",
        "output": "[]"
    },
    {
        "instruction": "# This is an event extraction task where the goal is to extract structured events from the text. A structured event contains an event trigger word, an event type, the arguments participating in the event, and their roles in the event. For each different event type, please output the extracted information from the text into python-style dictionaries where the first key will be 'mention' with the value of the event trigger. Next, please output the arguments and their roles following the same format. The event type definitions and their argument roles are defined next.",
        "input": "# The following lines describe the task definition\n\n@dataclass\nclass StartPosition(PersonnelEvent):\n    \"\"\"Key characteristics of the StartPosition event include the identification of the person or entity starting the position, the role or title being assumed, the location where the position is held, and the time when the position starts.\"\"\"\n    mention: str # The text span that triggers the event.\n    place: List # In some cases, the 'place' may be implied or broadly defined, such as 'in the region' or 'at the main office', requiring interpretation based on the text.\n    person: List # Edge cases for the 'person' argument include situations where multiple individuals are mentioned, and it is necessary to determine which one is relevant to the new position.\n    entity: List # Examples of 'entity' include 'United Nations', 'U.N.', 'administration', and 'unit'.\n\n\n# This is the text to analyze\ntext = \"HAIFA, Israel, March 5 (AFP) - Fifteen people were killed and more than 30 wounded Wednesday as a suicide bomber blew himself up on a student bus in the northern town of Haifa, the first bombing in Israel in exactly two months.\"\n\n# The list called result should contain the instances for the following events according to the guidelines above:\nresult = \n",
        "output": "[]"
    }
]