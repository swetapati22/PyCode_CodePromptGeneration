[
    {
        "instruction": "# This is an event extraction task where the goal is to extract structured events from the text. A structured event contains an event trigger word, an event type, the arguments participating in the event, and their roles in the event. For each different event type, please output the extracted information from the text into python-style dictionaries where the first key will be 'mention' with the value of the event trigger. Next, please output the arguments and their roles following the same format. The event type definitions and their argument roles are defined next.",
        "input": "# The following lines describe the task definition\n\n@dataclass\nclass Transport(MovementEvent):\n    \"\"\"Transport events can be triggered by verbs such as 'transport', 'move', 'deploy', 'cross', and 'return'. These events often involve an agent facilitating the movement and a vehicle used for transportation.\"\"\"\n    mention: str # The text span that triggers the event.\n    origin: List # The origin is crucial for understanding the full context of the transport event, as it provides the starting point of the movement.\n    victim: List # The identification of victims is important for understanding the humanitarian or ethical implications of the transport event.\n    vehicle: List # Vehicles can include any mode of transportation, such as cars, planes, ships, or even animals in some contexts.\n    place: List # The identification of place helps in understanding the geographical scope and relevance of the transport event.\n    agent: List # Agents can include individuals, organizations, or groups responsible for the movement.\n    destination: List # The destination is the endpoint of the transport event, indicating where the movement ends. For example, 'Sudan' in 'trains running to and from southern Sudan'.\n    artifact: List # The identification of artifacts is crucial for understanding what is being moved and the purpose of the transport event.\n\n\n# This is the text to analyze\ntext = \"But inspectors also questioned Iraq's motivation, as it began to give the inspectors what they wanted only when the threat of war became immediate.\"\n\n# The list called result should contain the instances for the following events according to the guidelines above:\nresult = \n",
        "output": "[]"
    },
    {
        "instruction": "# This is an event extraction task where the goal is to extract structured events from the text. A structured event contains an event trigger word, an event type, the arguments participating in the event, and their roles in the event. For each different event type, please output the extracted information from the text into python-style dictionaries where the first key will be 'mention' with the value of the event trigger. Next, please output the arguments and their roles following the same format. The event type definitions and their argument roles are defined next.",
        "input": "# The following lines describe the task definition\n\n@dataclass\nclass Attack(ConflictEvent):\n    \"\"\"An 'Attack' event refers to an aggressive action or series of actions aimed at causing harm or damage to a person, group, or place. Example triggers include 'ambush', 'bombardment', 'take out', 'clashing', and 'raping and drugging'.\"\"\"\n    mention: str # The text span that triggers the event.\n    instrument: List # The 'instrument' argument identifies what was used to perform the attack. This can be a weapon, tool, or other means. For example, 'The soldiers fired their rifles at the enemy' has 'rifles' as the instrument.\n    target: List # The 'target' argument identifies who or what is being attacked. This can be a specific individual, a group of people, or a physical location. For example, 'The rebels bombed the government building' has 'government building' as the target.\n    victim: List # In the context of an 'Attack' event, the 'victim' is the person or group that suffers harm or injury. For example, 'The civilians were caught in the crossfire' has 'civilians' as the victims.\n    place: List # In the context of an 'Attack' event, the 'place' is where the attack was carried out. For example, 'The explosion happened at the airport' has 'airport' as the place.\n    agent: List # The 'agent' in an 'Attack' event is the entity responsible for the attack. This can include individuals, groups, or larger entities. For example, 'The assault was ordered by the gang leader' has 'gang leader' as the agent.\n    attacker: List # In the context of an 'Attack' event, the 'attacker' is the person or group that initiates the harmful action. For example, 'The hackers targeted the company's database' has 'hackers' as the attackers.\n\n\n# This is the text to analyze\ntext = \"U.S. President George W. Bush said the reports indicated that only a war will make Iraq disarm.\"\n\n# The list called result should contain the instances for the following events according to the guidelines above:\nresult = \n",
        "output": "[Attack(mention='war', instrument=[], target=[], victim=[], place=[], agent=[], attacker=[])]"
    },
    {
        "instruction": "# This is an event extraction task where the goal is to extract structured events from the text. A structured event contains an event trigger word, an event type, the arguments participating in the event, and their roles in the event. For each different event type, please output the extracted information from the text into python-style dictionaries where the first key will be 'mention' with the value of the event trigger. Next, please output the arguments and their roles following the same format. The event type definitions and their argument roles are defined next.",
        "input": "# The following lines describe the task definition\n\n@dataclass\nclass Elect(PersonnelEvent):\n    \"\"\"An 'Elect' event involves the formal selection of an individual to a role or office, typically through a democratic process. Key characteristics include the presence of a candidate, a voting process, and a result. Example triggers are 'elected', 'won', 'elections', and 'winning'.\"\"\"\n    mention: str # The text span that triggers the event.\n    place: List # The 'place' argument identifies the location where the election occurs or where the elected individual will serve. For example, 'Los Angeles' in 'Beatriz Marinello was elected USCF President on August 11, 2003 in Los Angeles'.\n    person: List # In an 'Elect' event, the 'person' argument identifies the candidate who has been elected. For instance, 'Kerry' in 'Kerry won decisively not only in Ohio and Florida'.\n    entity: List # The 'entity' argument identifies the organization or group that the election pertains to. It is the body that the elected person will be associated with. For example, 'USCF' in 'Beatriz Marinello was elected USCF President'.\n\n\n# This is the text to analyze\ntext = \"The charismatic leader of Turkey's governing party was named prime minister Tuesday, a step that probably boosts chances that the United States will get permission to deploy troops in the country along Iraq's northern border.\"\n\n# The list called result should contain the instances for the following events according to the guidelines above:\nresult = \n",
        "output": "[Elect(mention='named', place=['country'], person=['leader'], entity=['party'])]"
    },
    {
        "instruction": "# This is an event extraction task where the goal is to extract structured events from the text. A structured event contains an event trigger word, an event type, the arguments participating in the event, and their roles in the event. For each different event type, please output the extracted information from the text into python-style dictionaries where the first key will be 'mention' with the value of the event trigger. Next, please output the arguments and their roles following the same format. The event type definitions and their argument roles are defined next.",
        "input": "# The following lines describe the task definition\n\n@dataclass\nclass Transport(MovementEvent):\n    \"\"\"Transport events are a subset of MovementEvents, specifically focusing on the logistics and mechanisms of moving entities from one place to another.\"\"\"\n    mention: str # The text span that triggers the event.\n    origin: List # In some cases, the origin might be implied or contextually understood rather than explicitly stated. For example, 'deploying some of Iraq's exiles' implies the origin is Iraq.\n    victim: List # Victims are typically people who are affected negatively by the transport event, such as refugees or kidnapped individuals.\n    vehicle: List # The vehicle is the means of transport used in the event, such as 'trains' in 'trains running to and from southern Sudan'.\n    place: List # The place refers to the general location where the transport event occurs, such as 'Iraq' in 'getting back into Iraq'.\n    agent: List # In some cases, the agent might be implied or contextually understood rather than explicitly stated.\n    destination: List # The destination is crucial for understanding the full context of the transport event, as it provides the endpoint of the movement.\n    artifact: List # The artifact refers to the entities being moved, such as 'women and children' in 'used to transport abducted women and children'.\n\n\n# This is the text to analyze\ntext = \"The charismatic leader of Turkey's governing party was named prime minister Tuesday, a step that probably boosts chances that the United States will get permission to deploy troops in the country along Iraq's northern border.\"\n\n# The list called result should contain the instances for the following events according to the guidelines above:\nresult = \n",
        "output": "[Transport(mention='deploy', origin=[], victim=[], vehicle=[], place=[], agent=['United States'], destination=['country', 'border'], artifact=['troops'])]"
    },
    {
        "instruction": "# This is an event extraction task where the goal is to extract structured events from the text. A structured event contains an event trigger word, an event type, the arguments participating in the event, and their roles in the event. For each different event type, please output the extracted information from the text into python-style dictionaries where the first key will be 'mention' with the value of the event trigger. Next, please output the arguments and their roles following the same format. The event type definitions and their argument roles are defined next.",
        "input": "# The following lines describe the task definition\n\n@dataclass\nclass MergeOrg(BusinessEvent):\n    \"\"\"Key characteristics of a MergeOrg event include the creation of a new, larger entity, the pooling of resources, and the potential for significant changes in organizational structure and strategy.\"\"\"\n    mention: str # The text span that triggers the event.\n    org: List # Edge cases for the 'Org' argument include situations where the entities are not explicitly named but are implied through context. Annotators should use their judgment to identify and extract these entities accurately.\n\n\n# This is the text to analyze\ntext = \"The charismatic leader of Turkey's governing party was named prime minister Tuesday, a step that probably boosts chances that the United States will get permission to deploy troops in the country along Iraq's northern border.\"\n\n# The list called result should contain the instances for the following events according to the guidelines above:\nresult = \n",
        "output": "[]"
    }
]